[ { "title": "Install Apache Airflow on Microk8s", "url": "/posts/Install-Airflow_on_Microk8s/", "categories": "Platform", "tags": "", "date": "2023-12-01 16:00:00 +0900", "snippet": "created : 2023-12-01, updated : 2023-12-01Introduction데이터를 주기적으로 수집하고 원하는 위치에 전달하기 위한 Workflow가 필요하다. 단순히 데이터를 수집하는 것이 아니라 수집한 데이터를 가공하고 크리닝하고 필요한 형태로 변환을 해야 한다. 스케줄에 의해서 주기적으로 수집을 해야 할 수도 있지만, 외부 요청에 의해 진행이 되어야 할 수도 있다. 이런 다양한 방법의 지원이 필요하다.Airflow는?Python 기반의 Workflow를 관리하는 Open Source이다. Data S..." }, { "title": "Install JupyterHub on Microk8s", "url": "/posts/Install-Jupyterhub_on_Microk8s/", "categories": "Platform", "tags": "", "date": "2023-11-16 16:00:00 +0900", "snippet": "created : 2023-11-16, updated : 2023-11-16Introduction소규모로 운영되는 데이터 분석 환경을 구성한다. 단일 사용자가 아닌 여러명이 자신의 Processor, Storage를 할당받아 Jupyter Notebook을 이용하여 분석을 한다.필요한 요소여러명이 사용하기 위해서 필요한 요소를 정의하였다. Microk8s JupyterHub Auth0RequirementsMicrok8s의 설치는 다른 Tutorial인 “Install Microk8s on Ubuntu(준비중)”를 확인하여..." }, { "title": "Install microk8s on RedHat Enterprise 8", "url": "/posts/Install-Microk8s_RedHatEnterprise8/", "categories": "Platform", "tags": "", "date": "2023-10-18 16:00:00 +0900", "snippet": "created : 2023-10-18, updated : 2023-10-18Introduction다양한 Application을 구동하고 관리하는 부분은 쉽지가 않다. 라이브러간의 의존성도 문제이고 OS와 호환 문제도 있다. 그래서 이를 해결하기 위해 Container 기술을 사용할 수 있다. 하지만 Container만을 사용하여도 외/내부 Network, DNS등 고민할 것이 많다. 이런 상황을 해결하는 하나로 Kubernetes(k8)가 활용되고 있다. 하지만 K8s는 여러 서버를 클러스터로 묶어서 운영에 최적화 되어 있다...." }, { "title": "Apache Kafka - Quick Start", "url": "/posts/Platform-kafka-quick-start/", "categories": "Platform", "tags": "", "date": "2022-01-17 16:00:00 +0900", "snippet": "created : 2022-01-17, updated : 2022-01-17IntroductionKafka는 기존의 Message Broker 의 기능을 업그레이드하여 BigData의 분석, Pipeline 등 대용량 분산환경에서 사용할 수 있는 Opne Source 이다. 대용량, 안정성(Partitioning, Relipcation) 을 보장하고 있어 운영환경에서는 상당한 하드웨어/VM을 필요하여 나도 차일피일 사용을 미루고 있었다. 이제는 Kafka을 Cloud 환경에서 제공하는 업체(Confluent, AWS, GCP,..." }, { "title": "Spring RSocket &amp; Retrosocket", "url": "/posts/Spring-RSocket/", "categories": "Network", "tags": "", "date": "2021-12-13 16:00:00 +0900", "snippet": "created : 2021-12-13, updated : 2021-12-13IntroductionRSocket은 REST API, gRPC 이후에 나온 Protocol로 기존의 단점들을 보강하기 위해 Netflix에서 개발을 시작하였다. 계속 개발이 이루어지고 있는 상태고 Spring에서도 관련 개념이 정리되고 있다. 기존의 통신과 차이점은 OSI Layer 5,6 이라고 한다. 앞으로 주목해야할 Protocol이라고 생각된다.Spring RSocket은 GA가 되었고 관련해서 편하게 쓰기 위한 Retroscoket은 아직 G..." }, { "title": "GraphQL - Spring GraphQL (not GA)", "url": "/posts/GraphQL-Spring-GraphQL_M/", "categories": "Network", "tags": "", "date": "2021-12-05 16:00:00 +0900", "snippet": "created : 2021-12-05, updated : 2021-12-05IntroductionGraphQL은 2015년에 Open Source로 Facebook이 공개하였다. 나는 그 당시는 REST API 위주로 프로젝트를 하고 있어 언젠가는 봐야지하고 미뤄놨던 기술이다. 이번에 Spring GraphQL에 대한 Spring Tips의 동영상을 보고 정리해보기로 했다. Spring GraphQL은 아직 (2021년 11월 현재) GA는 아니고 M2 단계이다. GraphQL이 Spring에 포함되면서 개발 편의성이 높아질 ..." }, { "title": "gRPC - Greeting Service 만들기", "url": "/posts/gRPC-basic-java-step2/", "categories": "Network", "tags": "", "date": "2021-11-21 16:00:00 +0900", "snippet": "created : 2021-11-21, updated : 2021-11-21Introduction이전 튜토리얼에서는 gRPC의 기본 개념과 Protocol Buffer와 Dummy Server/Client를 간단하게 만들어 보았다. 이제는 한단계 더 들어가서 데이터를 통신하는 방식을 알아보겠다.Pre-InstallationIntelliJ CommunityJava SDKgRPC - Basic 튜토리얼 Note. 소스코드는 https://github.com/ahnchan/tutorial-gRPC에서 확인할 수 있다.구성4가지 데..." }, { "title": "WebRTC Video Chat 만들기", "url": "/posts/WebRTC-basic/", "categories": "Network", "tags": "", "date": "2021-11-15 16:00:00 +0900", "snippet": "created : 2021-11-15, updated : 2021-11-15IntroductionWebRTC는 Device간의 Video, Audio와 Data까지 Peer to Peer로 통신을 할 수 있게 한다. 통신환경이 좋아져서 적은 사용자의 커넥션에서는 WebRTC가 중간 Streaming 서버 없이도 Device의 자원, 인터넷속도로도 Video/Audio 의 통신이 가능하다. 심지어는 모바일 에서도 가능하다.Android, iOS등 모바일 뿐 아니라 웹 브라우져에서도 가능하여 손쉽게 서비스를 개발할 수 있다. N..." }, { "title": "gRPC - Java 환경구성하기, Dummy Service 만들기", "url": "/posts/gRPC-basic-java-step1/", "categories": "Network", "tags": "", "date": "2021-11-09 16:00:00 +0900", "snippet": "created : 2021-11-09, updated : 2021-11-09IntroductionMicro Service의 환경이 되면서 점점 더 Service간의 연계가 많아지면서 서비스가 복잡해지고 있다. REST API 로 스펙관리에 한계를 느끼고 있다고 한다. 그래서 다시금 RPC 개념이 사용되고 있다. 기존 RPC를 Google에서 좀더 안정적으로 사용할 수 있게 gRPC로 만들어서 오픈소스로 공개하고 있다. 옛날에 TCP/IP 통신을 위해 Protocol 을 디자인 하면서 접했던 Protocol Buffer를 이용..." }, { "title": "Dapr Hello Kubernetes", "url": "/posts/CloudNative-Dapr-Hello-Kubernetes/", "categories": "CloudNative", "tags": "", "date": "2021-11-07 16:00:00 +0900", "snippet": "created : 2021-11-07, updated : 2021-11-07Introduction이번 튜토리얼에서는 Dapr를 Kubernetes에 올려보겠다. dapr의 특징인 Service Invocation과 State Management 를 사용할 것이다. Note. 본 소스는 Dapr 공식 Quick Start의 Hello-Kubernetes를 바탕으로 Dapr의 기능을 설명하기 위해 Application을 추가하여 작성하였다. 모두 Node.js 로 작성을 하였다.Requirements이전 Dapr 튜토리얼을 한번..." }, { "title": "Dapr Quick Start - Hello World", "url": "/posts/CloudNative-Dapr-QuickStart-HelloWorl/", "categories": "CloudNative", "tags": "", "date": "2021-10-30 16:00:00 +0900", "snippet": "created : 2021-10-30, updated : 2021-10-30Introduction이전 튜토리얼에서는 Dapr를 설치하고 간단하게 (링크) State Store에 정보를 저장, 확인하는 것을 확인했다. 이번 튜토리얼에서는 Dapr의 공식 Quick Start문서에서 Hello-World를 실행해보도록 하겠다.Pre-InstallationDapr Installation: https://ahnchan.github.io/posts/CloudNative-Dapr-Installation/Dapr Installation(D..." }, { "title": "Dapr Installation", "url": "/posts/CloudNative-Dapr-installation/", "categories": "CloudNative", "tags": "", "date": "2021-10-29 16:00:00 +0900", "snippet": "created : 2021-10-29, updated : 2021-10-29IntroductionCloud Native Application을 구현하기 위해 서비스간의 통신, 분산된 서비스의 관리는 중요하다. 이를 위해 프로그램을 하려면 고민을 많이 해야한다. Dapr는 이런 고민은 Sidecar Pattern을 이용하여 손쉽게 개발을 할 수 있게 하였다.본 튜토리얼에서는 Dapr를 위한 환경을 구성하고, 설치 및 간단한 테스트를 해보겠다. Note. Dapr의 공식문서를 가지고 직접 진행하면서 정리한 문서이다.Pre-Ins..." }, { "title": "Spring Cloud Gateway", "url": "/posts/CloudNative-Spring-Cloud-Gateway/", "categories": "CloudNative", "tags": "", "date": "2021-10-18 16:00:00 +0900", "snippet": "created : 2021-10-18, updated : 2021-10-18IntroductionMicroservice구성에서 많은 API Service가 분산되어 있다. 그래서 좀더 효과적으로 사용하기 위해 Gateway를 사용한다. Gateway에서 공통으로 권한관리를 할수도 있고 서비스 관리를 할수도 있다. Nginx, 상용/공개 API Gateway등 다른 솔루션/제품을 사용할 수 있지만, Spring Framewrk내에서 Gateway를 구현해보도록 하겠다.Requirements“Service Registration ..." }, { "title": "Spring Cloud Circuit Breaker", "url": "/posts/CloudNative-Circuit-Breaker/", "categories": "CloudNative", "tags": "", "date": "2021-10-07 16:00:00 +0900", "snippet": "created : 2021-10-07, updated : 2021-10-07Introduction서비스간 데이터를 요청할때 한쪽 서비스에 문제가 발생하였을 경우가 있다. 이럴 때를 대비하여 정보는 Default로 전달하여 전체 서비스가 오류가 나는 것을 방지 할 수 있다. 이때를 위해 Circuit Breaker를 이용하여 Default정보를 보낼 수 있다. Note. 본 Tutorial은 “Client Side Load Balancer - Ribbon (Spring Cloud)”를 기반으로 Circuit Breaker 부분..." }, { "title": "Client Side Load Balancer - Ribbon (Spring Cloud)", "url": "/posts/CloudNative-Client-Side-Load-Balancer-Ribbon/", "categories": "CloudNative", "tags": "", "date": "2021-09-17 16:00:00 +0900", "snippet": "created : 2021-09-17, updated : 2021-09-17Introduction이전 튜토리얼에서 Service를 등록하고 간단하게 호출하는 부분을 진행했다. 이제는 Microservice 환경에서 각각의 서비스간 호출을 위해 사용하는 Load Balancing을 알아보겠다.RequirementsService Registration and Discovery 튜토리얼을 먼저 학습한다. Note. 이 튜토리얼의 소스는 이곳에서 확인할 수 있다. initial은 이전 튜토리얼에서의 구성한 소스이고 complate..." }, { "title": "Service Registration and Discovery (Spring Boot)", "url": "/posts/CloudNative-Service-Registration-and-Discovery/", "categories": "CloudNative", "tags": "", "date": "2021-09-09 16:00:00 +0900", "snippet": "created : 2021-09-09, updated : 2021-09-09IntroductionSpring Framework 환경에서 서비스를 등록/관리하고 이 서비스를 다른 서비스에서 사용하는 방법을 설명해보겠다.이 문서는 https://spring.io/guides/gs/service-registration-and-discovery/를 기본으로 하단의 다른 문서들을 참조해가면서 작성이 되었으며, 실제로 서비스를 이용하고 통신하는 부분을 추가하였다. Note. 튜토리얼을 따라서 하기 편하게 하기 위해서 main 이 있는 ..." }, { "title": "Node.js 에서 QUIC 설정/컴파일하기", "url": "/posts/Network-Node_QUIC/", "categories": "Network", "tags": "", "date": "2021-07-29 16:00:00 +0900", "snippet": "created : 2021-07-29, updated : 2021-07-29IntroductionHTTP/3에 대해 동작을 확인하기 위해 Node.js에서 실행을 해본다. 정식 Release에는 포함되어 있지 않고 Compiie Config를 수정해야 한다. 본 문서에서는 MacOS에서 환경을 구성하여 만들어보도록 하겠다.Node QUIC 버전 컴파일하기 (15.0.0-pre)Node 에서 Experimental 기능인 QUIC를 enable 하고 컴파일을 해로 해야한다. 먼저 Git에서 QUIC가 적용된 소스를 받아온다.% ..." }, { "title": "Istio Sample Application Bookinfo 구동하기", "url": "/posts/Platform-Istio-Bookinfo/", "categories": "Platform", "tags": "", "date": "2021-07-26 16:00:00 +0900", "snippet": "created : 2021-07-26, updated : 2021-07-26IntroductionIstio는 Envoy Proxy를 이용하여 서비스간에 통신이 되도록하는 Open Source 이다. Micro service를 구성할때 필요한 기능이다. Kubernetes 에 구성되어 Service마다 Envoy Proxy를 포함하여 Traffic 관리, Security 를 관리할 수 있다.본 문서는 Istio의 Sample인 Bookinfo를 Kubernetes Cluster에 설치를 해보고 동작을 확인해보겠다. 거의 모든 내..." }, { "title": "Kubernetes Cluster 종료하기/시작하기", "url": "/posts/Platform-Stop_Start_Kubernetes/", "categories": "Platform", "tags": "", "date": "2021-07-21 16:00:00 +0900", "snippet": "created : 2021-07-21, updated : 2021-07-21Introduction이미 만들어진 Kubernetes Cluster(링크)를 종료하고 시작하는 방법을 기술해본다. 처음에 재시작하고 문제가 발생하여 해결하기 위해 문서를 작성하기 시작하였는데, Tip에 설명한 문제였다 몇번의 재설치(Ansible 만세)로 보강을 할 수 있었다.PrerequisitesAnsible을 이용하여 Ubuntu 20.04에 Kubernetes 구성하기Stop Kubernetes ClusterWorker node들을 종료를 한다..." }, { "title": "Ansible을 이용하여 Ubuntu 20.04에 Kubernetes 구성하기", "url": "/posts/Platform-kubernetes_ubuntu20/", "categories": "Platform", "tags": "", "date": "2021-07-11 16:00:00 +0900", "snippet": "created : 2021-07-11, updated : 2021-07-22Introduction이 문서를 찾은 사람들은 아마 Kubernetes가 무엇인지는 알고, 구성을 해보고 싶어서 검색을 했을 것이라 생각된다. 그래서 Kubernetes를 왜 사용해야하고, 장단점이 무엇인지를 논의하지는 않겠다. 간단하게 로컬에 VirtualBox를 이용하여 Kubernetes Cluster를 구성하는데 초점을 맞추겠다. Note: 이 튜토리얼은 Kubernetes Cluster를 Local에 환경을 구성해보고 싶을 경우 참조할 만한 ..." }, { "title": "Docker Swarm 구성하기(Ubuntu 20.04, Ansible)", "url": "/posts/Platform_docker_swarm_ubuntu20/", "categories": "Platform", "tags": "", "date": "2021-07-04 16:00:00 +0900", "snippet": "IntroductionDocker Swarm 을 구성해서 docker를 여러 worker node에서 서비스할수 있는 구조를 구성해본다. 검색을 해보면 많은 구성 방법이 있으나 이 문서는 Docker 공식 Doc의 방식을 Ansible 로 구성해 봤다.이 문서는 VirtualBox를 이용하여 Local에 Docker Swarm을 구성해봅니다.Prerequisites Ubuntu 20.04을 VirtualBox에 설치하기 Ansible 설치하기와 Playbook 실행하기RequirementsUbuntu 20.04 VM (Vi..." }, { "title": "Ubuntu 20.04를 VirtualBox에 설치하기", "url": "/posts/Platform_virtualbox_ubuntu/", "categories": "Platform", "tags": "", "date": "2021-07-01 16:00:00 +0900", "snippet": "Introduction오픈 소스 프로젝트(특히 Cloud Native)를 구동하기 위해서는 Linux 환경이 필요한 경우가 많다. MacOS에 직접 설치를 해도 되지만, 테스트하고 지우기를 반복해야하기에 환경을 별도로 구성하는 것이 좋다. 이 튜토리얼에서는 Windows 10, MacOS에서 Ubuntu를 VirtualBox에 설치하고 간단하게 Image를 만들어(Export) 필요할때 바로바로 추가 설치 없이 복사(Import)해서 사용하는 방법을 설명해보겠다. Note. 이 문서는 Windows에 맞춰서 작성되었으나 Vi..." } ]
